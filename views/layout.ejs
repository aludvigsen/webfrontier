<!DOCTYPE html>
<html>
  <head>
    <title>Webfrontier</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <link rel="stylesheet" href="/libs/normalize.css" type="text/css">
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Varela+Round" type="text/css">
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=PT+Sans" type="text/css">
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600" type="text/css">
    <link rel="stylesheet" href="/libs/font-awesome-4.0.3/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/libs/nanoScroller/nanoScroller.css" type="text/css">

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
    <script src="/libs/sails.io.js"></script>
  </head>

  <body>
      <header>
          <ul class="nav">
              <li>
                  <a href="/meetingroom"><i class="fa fa-comments"></i><span>meeting room</span></a>
              </li>
              <li>
                  <a href="#"><i class="fa fa-dropbox"></i><span>build it</span></a>
              </li>
              <li>
                  <a href="#"><i class="fa fa-list-alt"></i><span>my tasks</span></a>
              </li>
          </ul>
      </header>

      <section id="main">
          <div id="pageHeader">
              <h1>Meeting room</h1>
              <div id="userinfo">
                  <img src="/img/profile_pictures/andreas.png" width="24px" height="24px">
                  <span>Andreas Ludvigsen</span><i class="fa fa-caret-down"></i>
              </div>
          </div>

          <%- body %>

      </section>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->



    <!--SCRIPTS-->
    
    <!--SCRIPTS END-->
  </body>
</html>
